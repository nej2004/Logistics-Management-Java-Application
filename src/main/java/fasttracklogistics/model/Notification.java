package fasttracklogistics.model;

import java.time.LocalDateTime;

/**
 * Represents a generic Notification record from the 'notifications' table.
 * This class is primarily used by the DAO to retrieve raw notification data,
 * which is then mapped to more specific models (CustomerNotification, PersonnelNotification)
 * for UI presentation.
 */
public class Notification {
    private int notificationId;
    private String recipientType; // "Customer" or "Personnel"
    private int recipientId;      // Customer ID (proxy: shipment_id) or Personnel ID
    private int relatedShipmentId; // Can be 0 if not applicable
    private int relatedPersonnelId; // Can be 0 if not applicable
    private String message;
    private String notificationType; // e.g., "Status Update", "Assignment", "Urgent", "General"
    private LocalDateTime timestamp;
    private boolean isRead;
    private String contactMethod; // e.g., "App", "Email", "SMS"

    /**
     * Full constructor for loading Notification objects from the database.
     * This is the constructor the DAO uses when retrieving data from the 'notifications' table.
     *
     * @param notificationId The unique ID of the notification.
     * @param recipientType The type of recipient ("Customer" or "Personnel").
     * @param recipientId The ID of the recipient (e.g., Shipment ID for Customer, Personnel ID for Personnel).
     * @param relatedShipmentId The ID of a related shipment (0 if none).
     * @param relatedPersonnelId The ID of related personnel (0 if none).
     * @param message The content of the notification.
     * @param notificationType The specific type of notification (e.g., "Status Update").
     * @param timestamp The creation timestamp of the notification.
     * @param isRead True if the notification has been read, false otherwise.
     * @param contactMethod The method used for contact (e.g., "App", "Email").
     */
    public Notification(int notificationId, String recipientType, int recipientId,
                        int relatedShipmentId, int relatedPersonnelId, String message,
                        String notificationType, LocalDateTime timestamp, boolean isRead, String contactMethod) {
        this.notificationId = notificationId;
        this.recipientType = recipientType;
        this.recipientId = recipientId;
        this.relatedShipmentId = relatedShipmentId;
        this.relatedPersonnelId = relatedPersonnelId;
        this.message = message;
        this.notificationType = notificationType;
        this.timestamp = timestamp;
        this.isRead = isRead;
        this.contactMethod = contactMethod;
    }

    /**
     * Constructor for creating NEW generic Notification objects.
     * This constructor is primarily used by automated notification sending logic
     * or internal processes where a generic Notification object is sufficient.
     * The notificationId will be auto-generated by the database.
     * The timestamp will be set to the current time, and isRead will be set to false.
     *
     * @param recipientType The type of recipient ("Customer" or "Personnel").
     * @param recipientId The ID of the recipient (e.g., Shipment ID for Customer, Personnel ID for Personnel).
     * @param relatedShipmentId The ID of a related shipment (0 if none).
     * @param relatedPersonnelId The ID of related personnel (0 if none).
     * @param message The content of the notification.
     * @param notificationType The specific type of notification (e.g., "Status Update").
     * @param contactMethod The method used for contact (e.g., "App", "Email").
     */
    public Notification(String recipientType, int recipientId,
                        int relatedShipmentId, int relatedPersonnelId, String message,
                        String notificationType, String contactMethod) {
        this.recipientType = recipientType;
        this.recipientId = recipientId;
        this.relatedShipmentId = relatedShipmentId;
        this.relatedPersonnelId = relatedPersonnelId;
        this.message = message;
        this.notificationType = notificationType;
        this.contactMethod = contactMethod;
        this.timestamp = LocalDateTime.now(); // Automatically set current timestamp
        this.isRead = false; // New notifications are unread by default
    }

    // --- Getters and Setters ---
    public int getNotificationId() { return notificationId; }
    public void setNotificationId(int notificationId) { this.notificationId = notificationId; }

    public String getRecipientType() { return recipientType; }
    public void setRecipientType(String recipientType) { this.recipientType = recipientType; }

    public int getRecipientId() { return recipientId; }
    public void setRecipientId(int recipientId) { this.recipientId = recipientId; }

    public int getRelatedShipmentId() { return relatedShipmentId; }
    public void setRelatedShipmentId(int relatedShipmentId) { this.relatedShipmentId = relatedShipmentId; } // **FIXED TYPO HERE**

    public int getRelatedPersonnelId() { return relatedPersonnelId; }
    public void setRelatedPersonnelId(int relatedPersonnelId) { this.relatedPersonnelId = relatedPersonnelId; }

    public String getMessage() { return message; }
    public void setMessage(String message) { this.message = message; }

    public String getNotificationType() { return notificationType; }
    public void setNotificationType(String notificationType) { this.notificationType = notificationType; }

    public LocalDateTime getTimestamp() { return timestamp; }
    public void setTimestamp(LocalDateTime timestamp) { this.timestamp = timestamp; }

    public boolean isRead() { return isRead; }
    public void setRead(boolean read) { isRead = read; }

    public String getContactMethod() { return contactMethod; }
    public void setContactMethod(String contactMethod) { this.contactMethod = contactMethod; }

    @Override
    public String toString() {
        return "Notification{" +
                "notificationId=" + notificationId +
                ", recipientType='" + recipientType + '\'' +
                ", recipientId=" + recipientId +
                ", relatedShipmentId=" + relatedShipmentId +
                ", relatedPersonnelId=" + relatedPersonnelId +
                ", message='" + message + '\'' +
                ", notificationType='" + notificationType + '\'' +
                ", timestamp=" + timestamp +
                ", isRead=" + isRead +
                ", contactMethod='" + contactMethod + '\'' +
                '}';
    }
}